// This is basically an automatically generated file. - 20kdc
static int font_draw(byte ch, void * ud, void (*putpixel)(void*, int, int, int)) {
 switch (ch) {
  case 0x0:
   return 0x2;
  case 0x1:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
   }
   return 0x2;
  case 0x2:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
   }
   return 0x4;
  case 0x3:
   if (putpixel) {
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x3, 0x0, 0xFF);
    putpixel(ud, 0x3, 0x1, 0xFF);
    putpixel(ud, 0x3, 0x2, 0xFF);
    putpixel(ud, 0x3, 0x3, 0xFF);
    putpixel(ud, 0x3, 0x4, 0xFF);
    putpixel(ud, 0x4, 0x1, 0xFF);
    putpixel(ud, 0x4, 0x3, 0xFF);
   }
   return 0x6;
  case 0x4:
   if (putpixel) {
    putpixel(ud, 0x0, 0x1, 0x99);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0x99);
    putpixel(ud, 0x0, 0x5, 0xFF);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x5, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x5, 0xFF);
    putpixel(ud, 0x2, 0x6, 0xFF);
    putpixel(ud, 0x3, 0x1, 0xFF);
    putpixel(ud, 0x3, 0x3, 0xFF);
    putpixel(ud, 0x3, 0x5, 0xFF);
    putpixel(ud, 0x4, 0x1, 0xFF);
    putpixel(ud, 0x4, 0x3, 0x99);
    putpixel(ud, 0x4, 0x4, 0xFF);
    putpixel(ud, 0x4, 0x5, 0x99);
   }
   return 0x6;
  case 0x5:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x1, 0x99);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x3, 0x99);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x6:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x3, 0x2, 0xFF);
    putpixel(ud, 0x3, 0x4, 0xFF);
   }
   return 0x5;
  case 0x7:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
   }
   return 0x2;
  case 0x8:
   if (putpixel) {
    putpixel(ud, 0x0, 0x1, 0x99);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x0, 0x5, 0x99);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x1, 0x99);
    putpixel(ud, 0x1, 0x5, 0x99);
    putpixel(ud, 0x1, 0x6, 0xFF);
   }
   return 0x3;
  case 0x9:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0x99);
    putpixel(ud, 0x0, 0x5, 0x99);
    putpixel(ud, 0x0, 0x6, 0xFF);
    putpixel(ud, 0x1, 0x1, 0x99);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x5, 0x99);
   }
   return 0x3;
  case 0xa:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
   }
   return 0x4;
  case 0xb:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
   }
   return 0x4;
  case 0xc:
   if (putpixel) {
    putpixel(ud, 0x0, 0x5, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
   }
   return 0x3;
  case 0xd:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
   }
   return 0x4;
  case 0xe:
   if (putpixel) {
    putpixel(ud, 0x0, 0x4, 0xFF);
   }
   return 0x2;
  case 0xf:
   if (putpixel) {
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x0, 0x5, 0xFF);
    putpixel(ud, 0x0, 0x6, 0xFF);
    putpixel(ud, 0x1, 0x2, 0x99);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0x99);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
   }
   return 0x4;
  case 0x10:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0x99);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
   }
   return 0x4;
  case 0x11:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x0, 0x99);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x12:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0x99);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x13:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0x99);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
   }
   return 0x4;
  case 0x14:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x15:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
   }
   return 0x4;
  case 0x16:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
   }
   return 0x4;
  case 0x17:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x0, 0x99);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x18:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0x99);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0x99);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
   }
   return 0x4;
  case 0x19:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0x99);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0x99);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
   }
   return 0x4;
  case 0x1a:
   if (putpixel) {
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
   }
   return 0x2;
  case 0x1b:
   if (putpixel) {
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
   }
   return 0x3;
  case 0x1c:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x1d:
   if (putpixel) {
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
   }
   return 0x4;
  case 0x1e:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
   }
   return 0x4;
  case 0x1f:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x0, 0x99);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x2, 0x99);
   }
   return 0x3;
  case 0x20:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
    putpixel(ud, 0x3, 0x0, 0x99);
    putpixel(ud, 0x3, 0x1, 0xFF);
    putpixel(ud, 0x3, 0x2, 0x99);
    putpixel(ud, 0x3, 0x4, 0xFF);
   }
   return 0x5;
  case 0x21:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x0, 0x99);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x22:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0x99);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
   }
   return 0x4;
  case 0x23:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x24:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0x99);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
   }
   return 0x4;
  case 0x25:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x26:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
   }
   return 0x4;
  case 0x27:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
   }
   return 0x4;
  case 0x28:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x29:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x2a:
   if (putpixel) {
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
   }
   return 0x4;
  case 0x2b:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x2c:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x2d:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x0, 0x99);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
    putpixel(ud, 0x3, 0x0, 0xFF);
    putpixel(ud, 0x4, 0x0, 0x99);
    putpixel(ud, 0x4, 0x1, 0xFF);
    putpixel(ud, 0x4, 0x2, 0xFF);
    putpixel(ud, 0x4, 0x3, 0xFF);
    putpixel(ud, 0x4, 0x4, 0xFF);
   }
   return 0x6;
  case 0x2e:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x0, 0x99);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x2f:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0x99);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
   }
   return 0x4;
  case 0x30:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x0, 0x99);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
   }
   return 0x4;
  case 0x31:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
    putpixel(ud, 0x3, 0x0, 0x99);
    putpixel(ud, 0x3, 0x1, 0xFF);
    putpixel(ud, 0x3, 0x2, 0xFF);
    putpixel(ud, 0x3, 0x3, 0xFF);
    putpixel(ud, 0x3, 0x4, 0xFF);
    putpixel(ud, 0x3, 0x5, 0x99);
   }
   return 0x5;
  case 0x32:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x0, 0x99);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x33:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0x99);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
   }
   return 0x4;
  case 0x34:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
   }
   return 0x4;
  case 0x35:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
   }
   return 0x4;
  case 0x36:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0x99);
    putpixel(ud, 0x1, 0x2, 0x99);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0x99);
   }
   return 0x4;
  case 0x37:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
    putpixel(ud, 0x3, 0x4, 0xFF);
    putpixel(ud, 0x4, 0x0, 0xFF);
    putpixel(ud, 0x4, 0x1, 0xFF);
    putpixel(ud, 0x4, 0x2, 0xFF);
    putpixel(ud, 0x4, 0x3, 0xFF);
    putpixel(ud, 0x4, 0x4, 0x99);
   }
   return 0x6;
  case 0x38:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0x99);
    putpixel(ud, 0x0, 0x3, 0x99);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x1, 0x99);
    putpixel(ud, 0x2, 0x3, 0x99);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x39:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0x99);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
   }
   return 0x4;
  case 0x3a:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x3b:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x0, 0x5, 0xFF);
    putpixel(ud, 0x0, 0x6, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x6, 0xFF);
   }
   return 0x3;
  case 0x3c:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x2, 0x99);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0x99);
    putpixel(ud, 0x2, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x5, 0xFF);
    putpixel(ud, 0x2, 0x6, 0xFF);
   }
   return 0x4;
  case 0x3d:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x6, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x5, 0xFF);
    putpixel(ud, 0x1, 0x6, 0xFF);
   }
   return 0x3;
  case 0x3e:
   if (putpixel) {
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
   }
   return 0x4;
  case 0x3f:
   if (putpixel) {
    putpixel(ud, 0x0, 0x6, 0xFF);
    putpixel(ud, 0x1, 0x6, 0xFF);
    putpixel(ud, 0x2, 0x6, 0xFF);
   }
   return 0x4;
  case 0x40:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x1, 0xFF);
   }
   return 0x3;
  case 0x41:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0x99);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
    putpixel(ud, 0x3, 0x4, 0xFF);
   }
   return 0x5;
  case 0x42:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
   }
   return 0x4;
  case 0x43:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0x99);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x44:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0x99);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x1, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x45:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0x99);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0x99);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x46:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x0, 0x99);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
   }
   return 0x4;
  case 0x47:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0x99);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x0, 0x6, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x6, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x5, 0xFF);
    putpixel(ud, 0x2, 0x6, 0x99);
   }
   return 0x4;
  case 0x48:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x49:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
   }
   return 0x2;
  case 0x4a:
   if (putpixel) {
    putpixel(ud, 0x0, 0x5, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x5, 0x99);
   }
   return 0x3;
  case 0x4b:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x4c:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0x99);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x4d:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0x99);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
    putpixel(ud, 0x3, 0x2, 0xFF);
    putpixel(ud, 0x4, 0x2, 0x99);
    putpixel(ud, 0x4, 0x3, 0xFF);
    putpixel(ud, 0x4, 0x4, 0xFF);
   }
   return 0x6;
  case 0x4e:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x4f:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0x99);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
   }
   return 0x4;
  case 0x50:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x0, 0x5, 0xFF);
    putpixel(ud, 0x0, 0x6, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
   }
   return 0x4;
  case 0x51:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0x99);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x5, 0xFF);
    putpixel(ud, 0x2, 0x6, 0xFF);
   }
   return 0x4;
  case 0x52:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0x99);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
   }
   return 0x3;
  case 0x53:
   if (putpixel) {
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x2, 0x99);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0x99);
    putpixel(ud, 0x2, 0x2, 0xFF);
   }
   return 0x4;
  case 0x54:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0x99);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x55:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x56:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
   }
   return 0x4;
  case 0x57:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0x99);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
    putpixel(ud, 0x3, 0x4, 0xFF);
    putpixel(ud, 0x4, 0x2, 0xFF);
    putpixel(ud, 0x4, 0x3, 0xFF);
    putpixel(ud, 0x4, 0x4, 0x99);
   }
   return 0x6;
  case 0x58:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x59:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x2, 0x2, 0xFF);
   }
   return 0x4;
  case 0x5a:
   if (putpixel) {
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x2, 0x99);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x4, 0x99);
    putpixel(ud, 0x2, 0x4, 0xFF);
   }
   return 0x4;
  case 0x5b:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0x99);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x0, 0x5, 0xFF);
    putpixel(ud, 0x0, 0x6, 0x99);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x6, 0xFF);
   }
   return 0x3;
  case 0x5c:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x0, 0x5, 0xFF);
    putpixel(ud, 0x0, 0x6, 0xFF);
   }
   return 0x2;
  case 0x5d:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x6, 0xFF);
    putpixel(ud, 0x1, 0x0, 0x99);
    putpixel(ud, 0x1, 0x1, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x1, 0x3, 0x99);
    putpixel(ud, 0x1, 0x4, 0xFF);
    putpixel(ud, 0x1, 0x5, 0xFF);
    putpixel(ud, 0x1, 0x6, 0x99);
   }
   return 0x3;
  case 0x5e:
   if (putpixel) {
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x1, 0x2, 0xFF);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x3, 0x2, 0xFF);
   }
   return 0x5;
  case 0x5f:
   if (putpixel) {
    putpixel(ud, 0x0, 0x0, 0x99);
    putpixel(ud, 0x0, 0x1, 0xFF);
    putpixel(ud, 0x0, 0x2, 0xFF);
    putpixel(ud, 0x0, 0x3, 0xFF);
    putpixel(ud, 0x0, 0x4, 0xFF);
    putpixel(ud, 0x0, 0x5, 0xFF);
    putpixel(ud, 0x0, 0x6, 0x99);
    putpixel(ud, 0x1, 0x0, 0xFF);
    putpixel(ud, 0x1, 0x1, 0x99);
    putpixel(ud, 0x1, 0x5, 0x99);
    putpixel(ud, 0x1, 0x6, 0xFF);
    putpixel(ud, 0x2, 0x0, 0xFF);
    putpixel(ud, 0x2, 0x2, 0x99);
    putpixel(ud, 0x2, 0x3, 0xFF);
    putpixel(ud, 0x2, 0x4, 0x99);
    putpixel(ud, 0x2, 0x6, 0xFF);
    putpixel(ud, 0x3, 0x0, 0xFF);
    putpixel(ud, 0x3, 0x2, 0xFF);
    putpixel(ud, 0x3, 0x3, 0xFF);
    putpixel(ud, 0x3, 0x4, 0xFF);
    putpixel(ud, 0x3, 0x6, 0xFF);
    putpixel(ud, 0x4, 0x0, 0xFF);
    putpixel(ud, 0x4, 0x2, 0x99);
    putpixel(ud, 0x4, 0x3, 0xFF);
    putpixel(ud, 0x4, 0x4, 0x99);
    putpixel(ud, 0x4, 0x6, 0xFF);
    putpixel(ud, 0x5, 0x0, 0xFF);
    putpixel(ud, 0x5, 0x1, 0x99);
    putpixel(ud, 0x5, 0x5, 0x99);
    putpixel(ud, 0x5, 0x6, 0xFF);
    putpixel(ud, 0x6, 0x0, 0x99);
    putpixel(ud, 0x6, 0x1, 0xFF);
    putpixel(ud, 0x6, 0x2, 0xFF);
    putpixel(ud, 0x6, 0x3, 0xFF);
    putpixel(ud, 0x6, 0x4, 0xFF);
    putpixel(ud, 0x6, 0x5, 0xFF);
    putpixel(ud, 0x6, 0x6, 0x99);
   }
   return 0x8;
 }
 return 0;
}

